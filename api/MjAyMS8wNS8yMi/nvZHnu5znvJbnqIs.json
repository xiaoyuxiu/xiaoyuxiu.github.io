{"title":"网络编程","date":"2021-05-22T14:13:36.000Z","date_formatted":{"ll":"2021年5月22日","L":"2021/05/22","MM-DD":"05-22"},"link":"2021/05/22/网络编程","updated":"2021-05-24T11:28:34.258Z","content":"<h1 id=\"1、概述\">1、概述<a title=\"#1、概述\" href=\"#1、概述\"></a></h1>\n<p>地球村：你在西安打电话，美国可以收到</p>\n<p>打电话：–连接–接了–通话  <strong>TCP</strong></p>\n<p>发短信：–发了就完事--  <strong>UDP</strong></p>\n<hr>\n<p>**计算机网络：<strong>将</strong><a href=\"https://baike.baidu.com/item/%E5%9C%B0%E7%90%86\" target=\"_blank\">地理</a><strong>位置不同==的具有独立功能的==多台<a href=\"https://baike.baidu.com/item/%E8%AE%A1%E7%AE%97%E6%9C%BA/140338\" target=\"_blank\">计算机</a>及其外部设备，<strong>通过通信线路连接起来，在<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/3997\" target=\"_blank\">网络操作系统</a>，<a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E7%AE%A1%E7%90%86%E8%BD%AF%E4%BB%B6/6579078\" target=\"_blank\">网络管理软件</a>及</strong><a href=\"https://baike.baidu.com/item/%E7%BD%91%E7%BB%9C%E9%80%9A%E4%BF%A1%E5%8D%8F%E8%AE%AE/4438611\" target=\"_blank\">网络通信协议==</a>的管理和协调下，实现</strong><a href=\"https://baike.baidu.com/item/%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB/233480\" target=\"_blank\">资源共享</a>**和信息传递的计算机系统。</p>\n<p>**网络编程的目的：**传播交流信息、数据交换、通信</p>\n<p><strong>想要达到效果需要什么：</strong></p>\n<p>1、如何准确定义网络上的主机：主机号、端口号、定位计算机某个资源</p>\n<p>2、找到了主机，如何传输数据</p>\n<p><strong>注意</strong></p>\n<p>javaweb：网页编程 B/S</p>\n<p>网络编程：TCP/IP   C/S  客户端</p>\n<h1 id=\"2、网络通信的要素\">2、网络通信的要素<a title=\"#2、网络通信的要素\" href=\"#2、网络通信的要素\"></a></h1>\n<p>人工智能：智能汽车——工厂、人少，不能上市（伦理）！</p>\n<p><strong>实现网络通信</strong>：通信双方的地址–ip+端口号   Eg：192.268.16.124：5900</p>\n<p><strong>规则：网络通信的协议</strong>   http、ftp、smtp、tcp、udp</p>\n<p><strong>TCP/IP模型，传输层所学重点</strong></p>\n<p><img src=\"/.com//1.jpg\" alt=\"你想输入的替代文字\" class=\"φcx\"></p>\n<h1 id=\"小结\">小结<a title=\"#小结\" href=\"#小结\"></a></h1>\n<p>1、网络编程中主要的两个问题</p>\n<p>​      (1)如何准确定位网络上的一台或者多台主机</p>\n<p>​      (2)找到主机之后如何进行通信</p>\n<p>2、网络编程的要素</p>\n<p>（1）ip和端口号</p>\n<p>（2）网络通信协议</p>\n<p>3、万物皆对象，有相关的类没有就创建</p>\n<h1 id=\"3、ip\">3、IP<a title=\"#3、ip\" href=\"#3、ip\"></a></h1>\n<p>ip地址：InetAddress</p>\n<p>(1)唯一定位一台网络上计算机</p>\n<p>(2)127.0.0.1:本机上的ip</p>\n<p>(3)ip地址的分类：</p>\n<p><strong>通过ip地址分配（ipv4/ipv6）</strong></p>\n<p>–<strong>ipv4</strong>：127.0.0.1，由四个字节组成，0~255</p>\n<p>–<strong>ipv6</strong>： fe80::60e6:343f:6d9b:49f7%18，128位，8个无符号整数，abcd</p>\n<p><strong>公网（互联网使用）-私网（局域网使用）</strong></p>\n<p>1、<a href=\"http://192.168.xx.xxx\">192.168.xx.xxx</a>  专门给组织内部使用</p>\n<p>2、ABCD类 地址（阿里笔试）</p>\n<p>域名的诞生—记忆ip的问题</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.net.InetAddress;</span><br><span class=\"line\">import java.net.UnknownHostException;</span><br><span class=\"line\"></span><br><span class=\"line\">public class TestInetAddress &#123;</span><br><span class=\"line\">&#x2F;&#x2F;测试ip</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\ttry&#123;</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;查询本机地址</span><br><span class=\"line\">\t\t\tInetAddress inet1&#x3D;InetAddress.getByName(&quot;127.0.0.1&quot;);</span><br><span class=\"line\">\t\t\tSystem.out.println(inet1);</span><br><span class=\"line\">\t\t\tInetAddress inet2&#x3D;InetAddress.getByName(&quot;localhost&quot;);</span><br><span class=\"line\">\t\t\tSystem.out.println(inet2);</span><br><span class=\"line\">\t\t\tInetAddress inet3&#x3D;InetAddress.getLocalHost();</span><br><span class=\"line\">\t\t\tSystem.out.println(inet3);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;查询网站ip地址</span><br><span class=\"line\">\t\t\tInetAddress inet4&#x3D;InetAddress.getByName(&quot;www.baidu.com&quot;);</span><br><span class=\"line\">\t\t\tSystem.out.println(inet4);</span><br><span class=\"line\">\t\t\t</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;常用方法</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;System.out.println(inet4.getAddress());</span><br><span class=\"line\">\t\t\tSystem.out.println(inet4.getCanonicalHostName());</span><br><span class=\"line\">\t\t\tSystem.out.println(inet4.getHostAddress());</span><br><span class=\"line\">\t\t\tSystem.out.println(inet4.getHostName());</span><br><span class=\"line\">\t\t&#125;catch(UnknownHostException e)&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"4、端口\">4、端口<a title=\"#4、端口\" href=\"#4、端口\"></a></h1>\n<p>表示计算机上一个程序的进程</p>\n<p>Eg：每栋楼是一个ip，每个居民端口</p>\n<p>（1)<strong>不同的进程有不同的端口号，用来区分软件</strong>，ip区分地址，可以有</p>\n<p>​       0~655354个软件</p>\n<p>(2)分为TCP和UDP，<strong>单个协议下面端口号不能冲突</strong>  Eg：tcp=80，udp=80</p>\n<p>​     是错的</p>\n<p>端口分类：（1）公有端口 0~1023</p>\n<p>​                    http80、 https 443 、ftp21 、telent23</p>\n<p>​\t\t\t\t\t相当于https://1/=heeps://1:443/</p>\n<p>​                   （2）程序注册端口 2014~49151   分配用户或程序</p>\n<p>​                       Tomcat8080、MySql3306、Oracle1521</p>\n<p>​                   （3）动态私有：49152~65535</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1 netstat -ano #查看所有的端口</span><br><span class=\"line\">2 netstat -ano|findstr &quot;5900&quot; #查看指定的端口号</span><br><span class=\"line\">3 tasklisdt|findstr &quot;8787&quot; #查看指定端口的远程</span><br><span class=\"line\">4 ctrl+shift+esc #打开任务管理器</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.net.InetSocketAddress;</span><br><span class=\"line\"></span><br><span class=\"line\">public class TestInetStockAddress &#123;</span><br><span class=\"line\">\tpublic static void main(String []args)&#123;</span><br><span class=\"line\">\t\tInetSocketAddress a&#x3D;new InetSocketAddress(&quot;222&quot;,0000);</span><br><span class=\"line\">\t\tSystem.out.println(a);</span><br><span class=\"line\">\t\tSystem.out.println(a.getAddress());</span><br><span class=\"line\">\t\tSystem.out.println(a.getPort());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"5、通信协议\">5、通信协议<a title=\"#5、通信协议\" href=\"#5、通信协议\"></a></h1>\n<p>协议：约定，就好比上课约定好用普通话，进行交流</p>\n<p>网络通信协议：速率、传输码率、代码结构、传输控制</p>\n<p>大事化小：分层！</p>\n<h2 id=\"tcp/ip协议-实际上位一组协议\">TCP/IP协议-实际上位一组协议<a title=\"#tcp/ip协议-实际上位一组协议\" href=\"#tcp/ip协议-实际上位一组协议\"></a></h2>\n<p>重要：（1）TCP：用户传输协议</p>\n<p>​            （2）UDP：用户数据报协议</p>\n<p>出名的协议：（1）TCP：用户传输协议</p>\n<p>​                       （2） IP：网络互连协议</p>\n<h3 id=\"tcp、udp对比\">TCP、UDP对比<a title=\"#tcp、udp对比\" href=\"#tcp、udp对比\"></a></h3>\n<p>TCP：打电话</p>\n<p>（1）连接、稳定</p>\n<p>（2）三次握手、四次挥手</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、最少需要三次，保证稳定链接</span><br><span class=\"line\">A:你干嘛</span><br><span class=\"line\">B：吃饭</span><br><span class=\"line\">A：我也要</span><br><span class=\"line\">2、最少需要四次，保证断开</span><br><span class=\"line\">A：我要走了</span><br><span class=\"line\">B：我真的要走吗?</span><br><span class=\"line\">B：我真的真的真的要走吗？</span><br><span class=\"line\">A：真的要走！</span><br></pre></td></tr></table></figure>\n<p>（3）客户端、服务端</p>\n<p>（4）传输完成、释放连接、效率低</p>\n<p>UDP：发短信</p>\n<p>（1）不连接、不稳定</p>\n<p>（2）客户端、服务端：没有明确的界限</p>\n<p>（3）不管有没有准备好，都可以发送给你，类似于导弹</p>\n<h1 id=\"6、tcp\">6、TCP<a title=\"#6、tcp\" href=\"#6、tcp\"></a></h1>\n<p><strong>客户端：在web中是以request对象存在的,发送请求给服务器端处理.</strong></p>\n<p><strong>服务端</strong> ：<strong>顾名思义是服务的,客户端发送的请求交给服务器端处理,是以response对象存在,服务器端处理完毕后反馈给客户端。</strong><br>\n一般我们访问网站,都是<strong>客户端(浏览器、app)发出请求</strong>,然后**对方服务器端(sina,sohu)响应,**结果就是返回了页面路径给我们,我们再根据路径看到了网页。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">又叫主从式架构，简称C&#x2F;S结构，是一种网络架构，它把客户端 (Client) (通常是一个采用图形用户界面的程序)与服务器 (Server) 区分开来。每一个客户端软件的实例都可以向一个服务器或应用程序服务器发出请求。有很多不同类型的服务器，例如文件服务器、终端服务器和邮件服务器等。虽然它们的存在的目的不一样，但基本构架是一样的。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">import java.io.ByteArrayOutputStream;</span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.io.InputStream;</span><br><span class=\"line\">import java.net.InetAddress;</span><br><span class=\"line\">import java.net.ServerSocket;</span><br><span class=\"line\">import java.net.Socket;</span><br><span class=\"line\">import java.net.UnknownHostException;</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#x2F;&#x2F;服务器端</span><br><span class=\"line\">public class TopClimtDemo01 &#123;</span><br><span class=\"line\">\tpublic static void main(String[] args) &#123;</span><br><span class=\"line\">\t\tServerSocket s&#x3D;null;</span><br><span class=\"line\">\t\tSocket a&#x3D;null;</span><br><span class=\"line\">\t\tInputStream is&#x3D;null;</span><br><span class=\"line\">\t\tByteArrayOutputStream baos&#x3D;null;</span><br><span class=\"line\">\t\ttry&#123;</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;有一个服务器地址</span><br><span class=\"line\">\t\t    s&#x3D;new ServerSocket(7888);&#x2F;&#x2F;创建绑定到指定端口的服务器套接字。</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;等待客户端连接侦听与此套接字建立的连接并接受它。 该方法将阻塞，直到建立连接为止。</span><br><span class=\"line\">\t\t\ta&#x3D;s.accept();</span><br><span class=\"line\">            &#x2F;*创建一个新的Socket，如果有安全管理器，则使用s.getInetAddress（）</span><br><span class=\"line\">            getHostAddress（）和s.getPort（）作为其参数来调用安全管理器的checkAccept方 </span><br><span class=\"line\">            法，以确保允许该操作，这可能会导致 SecurityException。*&#x2F;</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;读取客户端信息</span><br><span class=\"line\">\t\t    is&#x3D;a.getInputStream();</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;管道流</span><br><span class=\"line\">\t\t\tbaos&#x3D;new ByteArrayOutputStream();</span><br><span class=\"line\">\t\t\tbyte[] b&#x3D;new byte[1024];</span><br><span class=\"line\">\t\t\tint len;</span><br><span class=\"line\">\t\t\twhile((len&#x3D;is.read(b))!&#x3D;-1)&#123;</span><br><span class=\"line\">\t\t\t\tbaos.write(b,0,len);</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tSystem.out.println(baos.toString());</span><br><span class=\"line\">\t\t\t&#125;catch(IOException e)&#123;</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;finally&#123;</span><br><span class=\"line\">\t\t\t\tif(baos!&#x3D;null)&#123;</span><br><span class=\"line\">\t\t\t\t  try &#123;</span><br><span class=\"line\">\t\t\t\t\tbaos.close();</span><br><span class=\"line\">\t\t\t\t  &#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t&#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif(is!&#x3D;null)&#123;</span><br><span class=\"line\">\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\tis.close();</span><br><span class=\"line\">\t\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t&#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif(s!&#x3D;null)&#123;</span><br><span class=\"line\">\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\ts.close();</span><br><span class=\"line\">\t\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t&#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\tif(a!&#x3D;null)&#123;</span><br><span class=\"line\">\t\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\t\ta.close();</span><br><span class=\"line\">\t\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t\t&#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#x2F;&#x2F;客户端</span><br><span class=\"line\">public class TopServeDemo01 &#123;</span><br><span class=\"line\">\tpublic static void main(String []args)&#123;</span><br><span class=\"line\">\t\tSocket a&#x3D;null;</span><br><span class=\"line\">\t\tOutputStream w&#x3D;null;</span><br><span class=\"line\">\t\ttry&#123;</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;知道服务器的地址</span><br><span class=\"line\">\t\t\tInetAddress sIP&#x3D;InetAddress.getByName(&quot;127.0.0.1&quot;);</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;知道端口号</span><br><span class=\"line\">\t\t\tint port&#x3D;7888;</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;创建一个socket的连接</span><br><span class=\"line\">\t\t\ta&#x3D;new Socket(sIP,port);</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;发送消息  IO流</span><br><span class=\"line\">\t\t\tw&#x3D;a.getOutputStream();</span><br><span class=\"line\">\t\t\tw.write(&quot;你好,欢迎来&quot;.getBytes());</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tcatch(Exception e)&#123;</span><br><span class=\"line\">\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t&#125;finally&#123;</span><br><span class=\"line\">\t\t\t&#x2F;&#x2F;关闭资源</span><br><span class=\"line\">\t\t\tif(w!&#x3D;null)&#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\tw.close();</span><br><span class=\"line\">\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t&#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\tif(a!&#x3D;null)&#123;</span><br><span class=\"line\">\t\t\ttry &#123;</span><br><span class=\"line\">\t\t\t\ta.close();</span><br><span class=\"line\">\t\t\t&#125; catch (IOException e) &#123;</span><br><span class=\"line\">\t\t\t\t&#x2F;&#x2F; TODO Auto-generated catch block</span><br><span class=\"line\">\t\t\t\te.printStackTrace();</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"7、文件上传\">7、文件上传<a title=\"#7、文件上传\" href=\"#7、文件上传\"></a></h1>\n<p>把文件变成流 读出来</p>\n<h1 id=\"localhost、127.0.0.1-和-本机ip之间的区别：\">localhost、127.0.0.1 和 本机IP之间的区别：<a title=\"#localhost、127.0.0.1-和-本机ip之间的区别：\" href=\"#localhost、127.0.0.1-和-本机ip之间的区别：\"></a></h1>\n<p>1、localhost等于127.0.0.1，不过localhost是域名，127.0.0.1是IP地址。</p>\n<p>2、localhost和127.0.0，不需要联网，都是本机访问。</p>\n<p>3、本机IP需要联网，本机IP是本机或外部访问， 本机 IP 就是本机对外放开访问的IP地址，这个网址就是与物理网卡绑定的IP地址。</p>\n<h1 id=\"8、tomacat\">8、Tomacat<a title=\"#8、tomacat\" href=\"#8、tomacat\"></a></h1>\n<p>服务器：自定义S</p>\n<p>​               Tomcat服务器S</p>\n<p>客户端：自定义c</p>\n<p>​                浏览器B</p>\n<h1 id=\"9、udp\">9、UDP<a title=\"#9、udp\" href=\"#9、udp\"></a></h1>\n<p>发短信：不用连接，需要知道对方地址</p>\n<p>DatagramPacket   数据发送包相当于信件   DatagramSocket 接受包</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package Demo03;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.io.IOException;</span><br><span class=\"line\">import java.net.DatagramPacket;</span><br><span class=\"line\">import java.net.DatagramSocket;</span><br><span class=\"line\">import java.net.SocketException;</span><br><span class=\"line\">&#x2F;&#x2F;接收端</span><br><span class=\"line\">public class UDPClimeDemo03 &#123;</span><br><span class=\"line\">\tpublic static void main(String []args) throws IOException&#123;</span><br><span class=\"line\">\t\t&#x2F;&#x2F;开放端口</span><br><span class=\"line\">\t\tDatagramSocket so&#x3D;new DatagramSocket(2022);</span><br><span class=\"line\">\t\tbyte []buffer&#x3D;new byte[1024];</span><br><span class=\"line\">\t\tDatagramPacket pocket&#x3D;new DatagramPacket(buffer,0,buffer.length);</span><br><span class=\"line\">\t\tso.receive(pocket);</span><br><span class=\"line\">\t\tSystem.out.println(pocket.getAddress().getHostAddress());</span><br><span class=\"line\">\t\tSystem.out.println(new String(pocket.getData(),0,pocket.getLength()));</span><br><span class=\"line\">\t\t&#x2F;&#x2F;关闭连接</span><br><span class=\"line\">\t\tso.close();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">public class UdpServeDemo03 &#123;</span><br><span class=\"line\">&#x2F;&#x2F;发送端</span><br><span class=\"line\">\tpublic static void main(String[] args) throws Exception &#123;</span><br><span class=\"line\">\t\t&#x2F;&#x2F;1、建立一个Socket</span><br><span class=\"line\">\t\tDatagramSocket socket&#x3D;new DatagramSocket();</span><br><span class=\"line\">\t\t&#x2F;&#x2F;2、建个包</span><br><span class=\"line\">\t\tString m&#x3D;&quot;你好啊,服务器&quot;;</span><br><span class=\"line\">\t\tInetAddress localhost&#x3D;InetAddress.getByName(&quot;localhost&quot;);</span><br><span class=\"line\">\t\tint port&#x3D;2022;</span><br><span class=\"line\">\t\t&#x2F;&#x2F;数据、数据的长度起始要发送给谁</span><br><span class=\"line\">\t\tDatagramPacket pocket&#x3D;new DatagramPacket(m.getBytes(),0,m.getBytes().length,localhost,port);</span><br><span class=\"line\">\t\t&#x2F;&#x2F;3、发送包</span><br><span class=\"line\">\t\tsocket.send(pocket);</span><br><span class=\"line\">\t\t&#x2F;&#x2F;4、关闭流</span><br><span class=\"line\">\t\tsocket.close();</span><br><span class=\"line\"></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">package Demo06;</span><br><span class=\"line\"></span><br><span class=\"line\">import java.net.MalformedURLException;</span><br><span class=\"line\">import java.net.URL;</span><br><span class=\"line\"></span><br><span class=\"line\">public class Url &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\tpublic static void main(String[] args) throws MalformedURLException &#123;</span><br><span class=\"line\">\t\tURL url&#x3D;new URL(&quot;http:&#x2F;&#x2F;localhost:8080&#x2F;hellowworld&#x2F;indextsjsajads&quot;);</span><br><span class=\"line\">\t\tSystem.out.println(url.getFile());</span><br><span class=\"line\">\t\tSystem.out.println(url.getHost());</span><br><span class=\"line\">\t\tSystem.out.println(url.getPath());</span><br><span class=\"line\">\t\tSystem.out.println(url.getQuery());</span><br><span class=\"line\">\t\tSystem.out.println(url.getProtocol());</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n","prev":{"title":"窗口组件","link":"2021/05/22/窗口组件"},"next":{"title":"多线程","link":"2021/05/22/多线程"},"plink":"http://example.com/2021/05/22/网络编程/","toc":[{"id":"1、概述","title":"1、概述","index":"1"},{"id":"2、网络通信的要素","title":"2、网络通信的要素","index":"2"},{"id":"小结","title":"小结","index":"3"},{"id":"3、ip","title":"3、IP","index":"4"},{"id":"4、端口","title":"4、端口","index":"5"},{"id":"5、通信协议","title":"5、通信协议","index":"6","children":[{"id":"tcp/ip协议-实际上位一组协议","title":"TCP&#x2F;IP协议-实际上位一组协议","index":"6.1","children":[{"id":"tcp、udp对比","title":"TCP、UDP对比","index":"6.1.1"}]}]},{"id":"6、tcp","title":"6、TCP","index":"7"},{"id":"7、文件上传","title":"7、文件上传","index":"8"},{"id":"localhost、127.0.0.1-和-本机ip之间的区别：","title":"localhost、127.0.0.1 和 本机IP之间的区别：","index":"9"},{"id":"8、tomacat","title":"8、Tomacat","index":"10"},{"id":"9、udp","title":"9、UDP","index":"11"}],"copyright":{"author":"John Doe","license":"Attribution-NonCommercial-NoDerivatives 4.0 International"}}